name: Redmine final

on:
  workflow_dispatch:
    inputs:
      redmine_issue_id:
        description: "Redmine Issue ID"
        required: true
      deploy_environment:
        description: "Deployment Environment (e.g., staging, production)"
        required: true
      release:
        description: 'Release Tag to Deploy'
        required: true
        type: string

jobs:
  deployment:
    runs-on: ubuntu-latest
    outputs: 
      deployment_note: ${{ steps.generate_note.outputs.note }}

    steps:
    - name: Dummy Deployment Step
      id: deploy
      run: |
        echo "Starting deployment..."
        # Simulating a deployment step
        if [ "$RANDOM" -gt 20000 ]; then
          echo "Deployment failed!"
          exit 1
        else
          echo "Deployment succeeded!"
        fi

    - name: Set Deployment Status
      id: set_status
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "status=Deployment completed successfully." >> $GITHUB_OUTPUT
        else
          echo "status=Deployment failed during execution." >> $GITHUB_OUTPUT
        fi
      if: always()

    - name: Generate Redmine Note
      id: generate_note
      run: |
        DEPLOYMENT_STATUS="${{ steps.set_status.outputs.status }}"
        COMMIT_ID="${{ github.sha }}"
        WORKFLOW_LOGS_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        DEPLOY_ENVIRONMENT="${{ github.event.inputs.deploy_environment }}"
        TAG_NAME="${{ inputs.release }}"
        GITHUB_TAG_URL="https://github.com/${{ github.repository }}/releases/tag/$TAG_NAME"
        NOTE="Deployment Status: $DEPLOYMENT_STATUS\nEnvironment: $DEPLOY_ENVIRONMENT\nCommit ID: $COMMIT_ID\nWorkflow Logs: $WORKFLOW_LOGS_URL\nGitHub Tag: $GITHUB_TAG_URL"
        echo "note=${NOTE//$'\n'/\\n}" >> $GITHUB_OUTPUT
      if: always()




  redmine_notification:
    needs: deployment
    if: always()
    secrets: inherit
    uses: krushna1512/reusable_workflow/.github/workflows/redmine.yml@main
    with: 
      redmine_issue_id: ${{ inputs.redmine_issue_id }}
      deployment_note: ${{ needs.deployment.outputs.deployment_note }}
