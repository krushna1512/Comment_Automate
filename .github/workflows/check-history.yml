
name: Create Release Build

on:
  release:
    types: [released, prereleased]

jobs:
  check-release-name:
    runs-on: ubuntu-latest
    steps:
      - name: Check Release Name for Spaces
        id: check-release
        run: |
          if [[ "${{ github.event.release.name }}" == *" "* ]]; then
            echo "Release name contains a space. Exiting workflow."
            exit 1
          else
            echo "Release name is valid. Proceeding with workflow."
          fi

  check-release:
    needs: check-release-name
    name: 1st file
    uses: krushna1512/reusable_workflow/.github/workflows/check-release.yml@main
    with:
     release: ${{ inputs.release }}
    secrets: inherit
    

  check-history:
    name: Check if release is behind
    needs: check-release
    uses: krushna1512/reusable_workflow/.github/workflows/check-history.yml@main
    secrets: inherit

  check-build:
    name: Build
    runs-on: ubuntu-latest
    needs: [ check-release, check-history ]
    if: needs.check-history.outputs.clean && ( ${{ needs.check-release.outputs.prefix }} == 'release' || ${{ needs.check-release.outputs.prefix }} == 'prerelease' )
    steps:
     - name: Debug
       run: |
          echo "Prefix: ${{ needs.check-release.outputs.prefix }}"
          echo "Clean: ${{ needs.check-history.outputs.clean }}"

  check-build1:
    name: Build1
    runs-on: ubuntu-latest
    needs: [ check-release, check-history ]
    if: ${{ needs.check-history.outputs.clean}} && (  needs.check-release.outputs.prefix == 'release' || needs.check-release.outputs.prefix == 'prerelease' )
    steps:
     - name: Debug
       run: |
          echo "Prefix: ${{ needs.check-release.outputs.prefix }}"
          echo "Clean: ${{ needs.check-history.outputs.clean }}"

  check-build2:
    name: Build2
    runs-on: ubuntu-latest
    needs: [ check-release, check-history ]
    if: ${{ needs.check-history.outputs.clean }} && (  ${{ needs.check-release.outputs.prefix == 'release' }} || ${{ needs.check-release.outputs.prefix }} == 'prerelease' )
    steps:
     - name: Debug
       run: |
          echo "Prefix: ${{ needs.check-release.outputs.prefix }}"
          echo "Clean: ${{ needs.check-history.outputs.clean }}"

  check-build3:
    name: Build3
    runs-on: ubuntu-latest
    needs: [ check-release, check-history ]
    if: needs.check-history.outputs.clean && (  needs.check-release.outputs.prefix == 'release' || needs.check-release.outputs.prefix == 'prerelease' )
    steps:
     - name: Debug
       run: |
          echo "Prefix: ${{ needs.check-release.outputs.prefix }}"
          echo "Clean: ${{ needs.check-history.outputs.clean }}"
